modules:
  - docassemble.docusign.da_docusign
  - .objects
---
objects:
  transferors: DAList.using(object_type=TRParty, auto_gather = False)
  transferees: DAList.using(object_type=TRParty, auto_gather = False)
  deliver_to: Individual
---
code: |
  transferors.appendObject(TRParty)
  transferors[0].name.first = "Ariana"
  transferors[0].name.middle = ""
  transferors[0].name.last = "Dumbledore"
  transferors[0].name.email = "hello+tr0@tonic.works"
  transferors[0].name.mobile_number = "+441143830382"
  transferors[0].witness.name.first = "Aberforth"
  transferors[0].witness.name.middle = ""
  transferors[0].witness.name.last = "Dumbledore"
  transferors[0].witness.address.address = "The Hogs Head Inn, Hogsmeade, United Kingdom, SK1 1DS"
  transferors[0].witness.name.email = "hello+trw0@tonic.works"
  transferors[0].witness.name.mobile_number = "+441143830382"

  transferors.appendObject(TRParty)
  transferors[1].name.first = "Albus"
  transferors[1].name.middle = "Percival Wulfric Brian"
  transferors[1].name.last = "Dumbledore"
  transferors[1].name.email = "hello+tr1@tonic.works"
  transferors[1].name.mobile_number = "+441143830382"
  transferors[1].witness.name.first = "Aurelius"
  transferors[1].witness.name.middle = ""
  transferors[1].witness.name.last = "Dumbledore"
  transferors[1].witness.address.address = "The Hogs Head Inn, Hogsmeade, United Kingdom, SK1 1DS"
  transferors[1].witness.name.email = "hello+trw1@tonic.works"
  transferors[1].witness.name.mobile_number = "+441143830382"

  transferors.gathered = True
---
code: |
  transferees.appendObject(TRParty)
  transferees[0].name.first = "Harry"
  transferees[0].name.middle = ""
  transferees[0].name.last = "Potter"
  transferees[0].name.email = "hello+tr0@tonic.works"
  transferees[0].name.mobile_number = "+441143830382"
  transferees[0].witness.name.first = "Ron"
  transferees[0].witness.name.middle = ""
  transferees[0].witness.name.last = "Weasley"
  transferees[0].witness.address.address = "Second Floor, The Burrow, Ottery St. Catchpole, United Kingdom, OS1 1DS"
  transferees[0].witness.name.email = "hello+trw0@tonic.works"
  transferees[0].witness.name.mobile_number = "+441143830382"

  transferees.appendObject(TRParty)
  transferees[1].name.first = "Ginevra"
  transferees[1].name.middle = "Molly"
  transferees[1].name.last = "Weasley"
  transferees[1].name.email = "hello+tr1@tonic.works"
  transferees[1].name.mobile_number = "+441143830382"
  transferees[1].witness.name.first = "Percy"
  transferees[1].witness.name.middle = "Ignatius"
  transferees[1].witness.name.last = "Weasley"
  transferees[1].witness.address.address = "First Floor, The Burrow, Ottery St. Catchpole, United Kingdom, OS1 1DS"
  transferees[1].witness.name.email = "hello+trw1@tonic.works"
  transferees[1].witness.name.mobile_number = "+441143830382"

  transferees.gathered = True
---
mandatory: true
code: |
  #find out what combo of transferors and transferees we want to test
  #test_choice
  #transferors[0]

  deliver_to.name.first = "Neville"
  deliver_to.name.last = "Longbottom"
  deliver_to.email = "hello+nl@tonic.works"

  doc_review

  signature_request = DocuSign()
  data_sent, data_received, status_code = signature_request.get_signatures(test_recipients,document_bundle,send_immediately=True,email_subject="Important: Please sign your transfer deed")
  if status_code == 201:
    signature_success
  else:
    signature_fail
---
code: |
  routingOrder = 1
  tabXPosition = 222
  tabYPosition = 50
  test_recipients = []
  for r in transferors:
    #add the signatory
    signatoryDeedText = 'Signed as a deed by ' + r.name.full(middle="full").upper()
    signatory = {}
    signatory['name'] = r.name.firstlast()
    signatory['email'] = r.name.email
    signatory['group'] = 'signers'
    signatory['routingOrder'] = routingOrder
    signatory['tabs'] = [
        {
            'type': 'text',
            'tabLabel': generate_anchor('text', r.name.email),
            'value': signatoryDeedText,
            'locked': 'true',
            'xPosition': tabXPosition,
            'yPosition': tabYPosition,
            'documentId': '1',
            'pageNumber': '3'
        },
        {
          'type': 'signHere',
          'xPosition': tabXPosition + 230,
          'yPosition': tabYPosition - 33,
          'documentId': '1',
          'pageNumber': '3'
        }
      ]
    #signatory['smsAuthentication'] = {
    #    'senderProvidedNumbers': ['+447543389333']
    #  }
    #signatory['idCheckConfigurationName'] = 'SMS Auth $'
    #signatory['requireIdLookup'] = True
    test_recipients.append(signatory)

    tabYPosition = tabYPosition + 20
    routingOrder = routingOrder + 1

    #add the witness
    witness = {}
    witness['name'] = r.witness.name.firstlast()
    witness['email'] = r.witness.name.email
    witness['group'] = 'signers'
    witness['routingOrder'] = routingOrder
    witness['tabs'] = [
        {
            'type': 'text',
            'tabLabel': generate_anchor('text', r.witness.name.email),
            'value': 'In the presence of:',
            'locked': 'true',
            'xPosition': tabXPosition,
            'yPosition': tabYPosition,
            'documentId': '1',
            'pageNumber': '3'
        },
        {
          'type': 'signHere',
          'xPosition': tabXPosition + 105,
          'yPosition': tabYPosition - 33,
          'documentId': '1',
          'pageNumber': '3'
        },
        {
            'type': 'text',
            'tabLabel': generate_anchor('text', r.witness.name.first),
            'value': r.witness.name.full(middle="full").upper(),
            'locked': 'true',
            'xPosition': tabXPosition,
            'yPosition': tabYPosition + 10,
            'documentId': '1',
            'pageNumber': '3'
        },
        {
            'type': 'text',
            'tabLabel': generate_anchor('text', r.witness.address.address),
            'value': 'of ' + r.witness.address.address.upper(),
            'locked': 'true',
            'xPosition': tabXPosition,
            'yPosition': tabYPosition + 20,
            'documentId': '1',
            'pageNumber': '3'
        },
      ]
    #witness['smsAuthentication'] = {
    #    'senderProvidedNumbers': ['+447543389333']
    #  }
    #witness['idCheckConfigurationName'] = 'SMS Auth $'
    #witness['requireIdLookup'] = True
    test_recipients.append(witness)

    tabYPosition = tabYPosition + 40
    routingOrder = routingOrder + 1

  # do the same here for transferees (Note: it is only necessary for transferres to sign in certain circumstances, however we include them here to show the resulting layout in docusign works okay)
  for r in transferees:
    #add the signatory
    signatoryDeedText = 'Signed as a deed by ' + r.name.full(middle="full").upper()
    signatory = {}
    signatory['name'] = r.name.firstlast()
    signatory['email'] = r.name.email
    signatory['group'] = 'signers'
    signatory['routingOrder'] = routingOrder
    signatory['tabs'] = [
        {
            'type': 'text',
            'tabLabel': generate_anchor('text', r.name.email),
            'value': signatoryDeedText,
            'locked': 'true',
            'xPosition': tabXPosition,
            'yPosition': tabYPosition,
            'documentId': '1',
            'pageNumber': '3'
        },
        {
          'type': 'signHere',
          'xPosition': tabXPosition + 230,
          'yPosition': tabYPosition - 33,
          'documentId': '1',
          'pageNumber': '3'
        }
      ]
    #signatory['smsAuthentication'] = {
    #    'senderProvidedNumbers': ['+447543389333']
    #  }
    #signatory['idCheckConfigurationName'] = 'SMS Auth $'
    #signatory['requireIdLookup'] = True
    test_recipients.append(signatory)

    tabYPosition = tabYPosition + 20
    routingOrder = routingOrder + 1

    #add the witness
    witness = {}
    witness['name'] = r.witness.name.firstlast()
    witness['email'] = r.witness.name.email
    witness['group'] = 'signers'
    witness['routingOrder'] = routingOrder
    witness['tabs'] = [
        {
            'type': 'text',
            'tabLabel': generate_anchor('text', r.witness.name.email),
            'value': 'In the presence of:',
            'locked': 'true',
            'xPosition': tabXPosition,
            'yPosition': tabYPosition,
            'documentId': '1',
            'pageNumber': '3'
        },
        {
          'type': 'signHere',
          'xPosition': tabXPosition + 105,
          'yPosition': tabYPosition - 33,
          'documentId': '1',
          'pageNumber': '3'
        },
        {
            'type': 'text',
            'tabLabel': generate_anchor('text', r.witness.name.first),
            'value': r.witness.name.full(middle="full").upper(),
            'locked': 'true',
            'xPosition': tabXPosition,
            'yPosition': tabYPosition + 10,
            'documentId': '1',
            'pageNumber': '3'
        },
        {
            'type': 'text',
            'tabLabel': generate_anchor('text', r.witness.address.address),
            'value': 'of ' + r.witness.address.address.upper(),
            'locked': 'true',
            'xPosition': tabXPosition,
            'yPosition': tabYPosition + 20,
            'documentId': '1',
            'pageNumber': '3'
        },
      ]
    #witness['smsAuthentication'] = {
    #    'senderProvidedNumbers': ['+447543389333']
    #  }
    #witness['idCheckConfigurationName'] = 'SMS Auth $'
    #witness['requireIdLookup'] = True
    test_recipients.append(witness)

    tabYPosition = tabYPosition + 40
    routingOrder = routingOrder + 1

  #  new_recipient = {}
  #  new_recipient['name'] = deliver_to.name.firstlast()
  #  new_recipient['email'] = deliver_to.email
  #  new_recipient['group'] = 'certifiedDeliveries'
  #  new_recipient['routingOrder'] = routingOrder + 1
  #  test_recipients.append(new_recipient)

  document_bundle=[
        {
            'name': "Completed TR1 for Signatures",
            'fileExtension': 'pdf',
            'documentBase64': make_document_base64(transfer_of_whole_doc.pdf.path())
        }
  ]
---
#question: |
#  Is there another transferor?
#yesno: transferors.there_is_another
---
#question: |
#  Are there any transferors?
#yesno: transferors.there_are_any
---
#generic object: Individual
#question: |
#  What is the transferor's name and email address?
#fields:
#  - First Name: x.name.first
#  - Last Name: x.name.last
#  - Email: x.email
---
#question: |
#  What is the name and email address of the ultimate recipient (the conveyancer probably)?
#fields:
#  - First Name: deliver_to.name.first
#  - Last Name: deliver_to.name.last
#  - Email: deliver_to.email
---
question: Test TR1 Generated
subquestion: |
  Press continue to send it for signatures.
field: doc_review
attachments:
  - name: Completed TR1
    filename: transfer_of_whole_doc
    pdf template file: TR1__2019-06-17_.pdf
    variable name: transfer_of_whole_doc
    editable: False
    fields:
      # 1. TITLE NUMBERS
      - 1: ${ 'SK12345678' }
      # 2. PROPERTY ADDRESS (todo -  that this will need wrapping if too long for the box... or put max character length?)
      - 2: ${ 'The Hogs Head Inn, Hogsmeade, Hogsmeadington, Hogsmeadington upon Tyne, United Kingdom, SK1 1DS' }
---
question: Document Successfully Sent For Signature
event: signature_success
---
question: Attempt to Send document For Signature Not Successful
event: signature_fail
subquestion: |
  The data that was sent to the server is:

  ${ data_sent }

  The data returned from the server is:

  ${ data_received }

  The status code of message returned from the server is:

  ${ status_code }
---
question: Not in Docusign Test Mode
event: not_in_docusign_test_mode
subquestion: |
  This interview is only for testing the TR1 populates correctly when docusign is in test mode

  Set test-mode to True under docusign in your Docassemble config if you want to run this.
---